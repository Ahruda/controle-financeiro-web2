<div class='row' align="center">
  <h3>Visão Geral</h3>
  <hr>
</div>

<div class='row mt-3'>
  <div class="col-md-1"></div>
  <div class='col-md-2'>
    <div class="mb-3">
      <button class='btn btn-primary' data-bs-toggle="modal" onclick="openModal()">
        Nova Transação
      </button>
    </div>
    <div class='card mb-3 border-success' style='max-width: 18rem;'>
      <div class='card-header'>Entradas</div>
      <div class='card-body'>
        <h5 class='card-title'><strong id='entrada'></strong></h5>
      </div>
    </div>
    <div class='card mb-3 border-danger' style='max-width: 18rem;'>
      <div class='card-header'>Saídas</div>
      <div class='card-body'>
        <h5 class='card-title'><strong id='saida'></strong></h5>
      </div>
    </div>
    <div class='card mb-3 border-primary' style='max-width: 18rem;'>
      <div class='card-header'>Total</div>
      <div class='card-body'>
        <h5 class='card-title'><strong id='total'></strong></h5>
      </div>
    </div>
  </div>
  
  <div class='col-md-1'></div>

  <div class='col-md-7'>
    <div class='card'>
      <div class='card-body'>
        <h4>Tabela de gastos</h4>
        <table class='table table-bordered' id='table'></table>
      </div>
    </div>
  </div>

  <div class="col-md-1"></div>

</div>

<!-- Modal nova transacao -->
<div class="modal fade" id="modalNovaTransacao" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Nova Transação</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="form">
          <input type="hidden" class="form-control" id="id">
          <div class="row">
            <div class="col-md-12">
              <label for="titulo" class="form-label">Título</label>
              <input type="text" class="form-control" id="titulo">
            </div>
            <div class="col-md-12">
              <label for="titulo" class="form-label">Valor</label>
              <input type="text" class="form-control" id="valor">
            </div>
            <div class="col-md-6">
              <label for="data" class="form-label">Data</label>
              <input type="text" class="form-control" id="data">
            </div>
            <div class="col-md-6">
              <label for="hora" class="form-label">Hora</label>
              <input type="time" class="form-control" id="hora">
            </div>
            <div class="col-md-12">
              <label for="hora" class="form-label">Categoria</label>
              <select class="form-select" aria-label="Default select example" id="categoria">
                <option value="1">Estudos</option>
                <option value="2">Casa</option>
                <option value="3">Viagem</option>
                <option value="4">Compras</option>
                <option value="5">Supermercado</option>
              </select>
            </div>

            <label class="form-label">Tipo da transação</label>
            <div class="btn-group">
              <input type="radio" class="btn-check" name="options" id="optionEntrada" autocomplete="off" />
              <label class="btn btn-outline-success" for="optionEntrada">Entrada</label>

              <input type="radio" class="btn-check" name="options" id="optionSaida" autocomplete="off" />
              <label class="btn btn-outline-danger" for="optionSaida">Saída</label>
            </div>

            
          </div>
        </div>
      </form>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
        <button type="button" class="btn btn-primary" onClick="saveTransaction()">Salvar transação</button>
      </div>
    </div>
  </div>
</div>

<script type="text/javascript">

  let request = new XMLHttpRequest()

  getTransactions()

  function openModal() {
    document.getElementById("form").reset();
    new bootstrap.Modal(document.getElementById('modalNovaTransacao')).show()
  }

  function getTransactions() {

    request.open("GET","http://localhost:3000/transacao")
    request.send();
    request.onload = () => {
      if(request.status === 200){
        updateTable(JSON.parse(request.response))        
      } else {
        console.log("Page not found")
      }
    }
  }

  function updateTable(data) {
    let entrada = 0
    let saida = 0

    let tab = 
      `<thead>
      <th>#</th>
      <th>Título</th>
      <th>Tipo</th>
      <th>Valor</th>
      <th>Categoria</th>
      <th>Data</th>
      <th>Hora</th>
      <th>Ações</th>
      </thead>
      <tbody>
      `
    
    for (let l of data) {

      let categoria
      switch (parseInt(l.categoria)) {
        case 1:
          categoria = 'Estudos'
          break
        case 2:
          categoria = 'Casa'
          break
        case 3:
          categoria = 'Viagem'
          break
        case 4:
          categoria = 'Compras'
          break
        case 5:
          categoria = 'Supermercado'
          break
      }

      if(l.tipo == 1) {
        tipo = '<span style="color: green">Entrada</span>'
      } else {
        tipo = '<span style="color: red">Saída</span>'
      }
      
      let valor = l.valor.toString()


      tab += `<tr> 
        <td>${l.id}</td>
        <td>${l.titulo}</td>
        <td>${tipo}</td>
        <td>R$ ${VMasker.toMoney(l.valor)}</td>
        <td>${categoria}</td>
        <td>${l.datacao}</td>
        <td>${l.datacao}</td>
        <td>              
          <button class='btn btn-primary' onClick='modalUpdateTransaction(${l.id})'>
            <i class="far fa-edit"></i>
          </button>     
          <button class='btn btn-primary' onClick='deleteTransaction(${l.id})'>
            <i class="far fa-trash-alt"></i>
          </button>
        </td>
      </tr>`
    
      if(l.tipo == 1) {
        entrada += parseFloat(l.valor)
      } else {
        saida += parseFloat(l.valor)
      }

    }

    tab += `</tbody>`

    document.getElementById("table").innerHTML = tab
    document.getElementById("entrada").innerHTML = 'R$ ' + entrada.toFixed(2)
    document.getElementById("saida").innerHTML = 'R$ ' + saida.toFixed(2)
    document.getElementById("total").innerHTML = 'R$ ' + (entrada-saida).toFixed(2)
    pesquisarTransacao()
  }

  function saveTransaction() {
    let id = document.getElementById('id').value
    let titulo = document.getElementById('titulo').value
    let valor = document.getElementById('valor').value
    let categoria = document.getElementById('categoria').value
    let data = document.getElementById('data').value
    let tipo = 1

    if(id === '') {
      request.open("POST",`http://localhost:3000/transacao`)
    }else{
      request.open("PUT",`http://localhost:3000/transacao/${id}`)
    }

    let optionSaida = document.getElementById('optionSaida').checked

    if(optionSaida){
      tipo = 2;
    }


    valor = valor.replace(".", "")
    valor = valor.replace(",", ".")
    valor = valor.replace("R$", "")
    valor = parseFloat(valor)

    const params = {
      titulo: titulo,
      valor: valor,
      categoria: categoria,
      tipo: tipo,
      data: data
    }

    request.setRequestHeader('Content-type', 'application/json')
    request.send(JSON.stringify(params)) // Make sure to stringify
    request.onload = () => {
      if(request.status === 200){
        Swal.fire(
          'Transação alterada com sucesso!',
          'Sua transação foi alterada',
          'success'
        )      
      } else if(request.status === 201) {
        Swal.fire(
          'Inserida com sucesso!',
          'Sua transação foi inserida',
          'success'
        )      
      } else {
        Swal.fire(
          'Ocorreu um erro ao inserir a transação!',
          'Erro http:' + request.status,
          'error'
        )    
      }
      getTransactions()
    }
  }

  function deleteTransaction(id) {
    Swal.fire({
      title: 'Tem certeza que deseja excluir?',
      text: "Isso não poderá ser desfeito!",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#3085d6',
      cancelButtonColor: '#d33',
      confirmButtonText: 'Sim, excluir transação!'
    }).then((result) => {
      if (result.isConfirmed) {    
        request.open("DELETE",`http://localhost:3000/transacao/${id}`)
        request.send();
        request.onload = () => {
          if(request.status === 200){
            getTransactions()
            Swal.fire(
              'Excluido com sucesso!',
              'Sua transação foi excluida',
              'success'
            )      
          } else {
            Swal.fire(
              'Ocorreu um erro ao excluir a transação!',
              'Erro http:' + request.status,
              'error'
            )    
          }
        }
      }
    })
  }

  function modalUpdateTransaction(id) {
    document.getElementById("form").reset();
    let response
    request.open("GET",`http://localhost:3000/transacao/${id}`)
    request.send();
    request.onload = () => {
      if(request.status === 200){
        response = JSON.parse(request.response)[0]
        document.getElementById('id').value = response.id
        document.getElementById('titulo').value = response.titulo
        document.getElementById('valor').value = `R$ ${VMasker.toMoney(response.valor)}`
        document.getElementById('categoria').value = response.categoria
        document.getElementById('data').value = response.datacao
        
        if(response.tipo == 1) {
          document.getElementById('optionEntrada').checked = true
        } else {
          document.getElementById('optionSaida').checked = true
        }
      }
    }
    new bootstrap.Modal(document.getElementById('modalNovaTransacao')).show()

  }

  // Masking input element to money with options.
  VMasker(document.getElementById("valor")).maskMoney({
    unit: 'R$'
  });

  VMasker(document.getElementById("data")).maskPattern("99/99/9999")
  

  let filtro = document.getElementById('campoPesquisa');
  let tabela = document.getElementById('table');
  let botao = document.getElementById('botao-pesquisa');

  const urlParams = new URLSearchParams(window.location.search);
  const pesquisa = urlParams.get('pesquisa');

  filtro.addEventListener("keyup", pesquisarTransacao);
  
  function pesquisarTransacao() {
    console.log('entrou')
      let nomeFiltro = filtro.value;
      for (var i = 1; i < tabela.rows.length; i++) {
          var conteudoCelula = tabela.rows[i].cells[1].innerText;
          var corresponde = conteudoCelula.toLowerCase().indexOf(nomeFiltro) >= 0;
          tabela.rows[i].style.display = corresponde ? '' : 'none';
      }
  };

  if(pesquisa != null){
      filtro.value = pesquisa
  }

</script>

